"""
Script simple de inicializaci√≥n Liga MX
"""

import os
import sys
import logging

# Configurar path para imports
sys.path.insert(0, '/home/runner/workspace')

# Configurar logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def init_database():
    """Inicializar base de datos con equipos Liga MX"""
    try:
        # Import directo sin depender de routes
        from app import app, db
        from models import LigaMXEquipo, ApiKey
        
        with app.app_context():
            # Crear todas las tablas
            db.create_all()
            logger.info("‚úÖ Tablas creadas correctamente")
            
            # Verificar si ya hay equipos
            equipos_existentes = LigaMXEquipo.query.count()
            if equipos_existentes > 0:
                logger.info(f"‚ö†Ô∏è Ya existen {equipos_existentes} equipos en la base de datos")
                return True
            
            # Equipos Liga MX
            equipos = [
                ('Am√©rica', 'Club de F√∫tbol Am√©rica', 'Ciudad de M√©xico', 'Estadio Azteca'),
                ('Guadalajara', 'Club de F√∫tbol Guadalajara', 'Guadalajara', 'Estadio Akron'),
                ('Cruz Azul', 'Cruz Azul F√∫tbol Club', 'Ciudad de M√©xico', 'Estadio Azteca'),
                ('Pumas', 'Club Universidad Nacional', 'Ciudad de M√©xico', 'Estadio Ol√≠mpico Universitario'),
                ('Tigres', 'Club de F√∫tbol Tigres de la UANL', 'San Nicol√°s de los Garza', 'Estadio Universitario'),
                ('Monterrey', 'Club de F√∫tbol Monterrey', 'Monterrey', 'Estadio BBVA'),
                ('Santos', 'Club Santos Laguna', 'Torre√≥n', 'Estadio Corona'),
                ('Le√≥n', 'Club Le√≥n', 'Le√≥n', 'Estadio Le√≥n'),
                ('Pachuca', 'Club de F√∫tbol Pachuca', 'Pachuca', 'Estadio Hidalgo'),
                ('Toluca', 'Deportivo Toluca F√∫tbol Club', 'Toluca', 'Estadio Nemesio D√≠ez'),
                ('Atlas', 'Club de F√∫tbol Atlas', 'Guadalajara', 'Estadio Jalisco'),
                ('Puebla', 'Club de F√∫tbol Puebla', 'Puebla', 'Estadio Cuauht√©moc'),
                ('Necaxa', 'Club Necaxa', 'Aguascalientes', 'Estadio Victoria'),
                ('Mazatl√°n', 'Mazatl√°n F√∫tbol Club', 'Mazatl√°n', 'Estadio El Encanto'),
                ('FC Ju√°rez', 'FC Ju√°rez', 'Ciudad Ju√°rez', 'Estadio Ol√≠mpico Benito Ju√°rez'),
                ('Quer√©taro', 'Quer√©taro F√∫tbol Club', 'Quer√©taro', 'Estadio Corregidora'),
                ('Tijuana', 'Club Tijuana', 'Tijuana', 'Estadio Caliente'),
                ('San Luis', 'Atl√©tico de San Luis', 'San Luis Potos√≠', 'Estadio Alfonso Lastras')
            ]
            
            equipos_creados = 0
            for nombre, nombre_completo, ciudad, estadio in equipos:
                equipo = LigaMXEquipo(
                    nombre=nombre,
                    nombre_completo=nombre_completo,
                    ciudad=ciudad,
                    estadio=estadio,
                    fundacion='1900'  # A√±o por defecto
                )
                db.session.add(equipo)
                equipos_creados += 1
                logger.info(f"‚ûï Agregado: {nombre}")
            
            # Commit equipos
            db.session.commit()
            logger.info(f"üèÜ {equipos_creados} equipos de Liga MX creados exitosamente")
            
            # Verificar APIs de f√∫tbol existentes
            apis_futbol = ApiKey.query.filter_by(service_name='football').count()
            logger.info(f"üìä APIs de f√∫tbol configuradas: {apis_futbol}")
            
            return True
            
    except Exception as e:
        logger.error(f"‚ùå Error en inicializaci√≥n: {e}")
        return False

if __name__ == '__main__':
    logger.info("üöÄ Iniciando configuraci√≥n b√°sica Liga MX...")
    success = init_database()
    if success:
        logger.info("‚úÖ Inicializaci√≥n completada")
    else:
        logger.error("‚ùå Inicializaci√≥n fall√≥")